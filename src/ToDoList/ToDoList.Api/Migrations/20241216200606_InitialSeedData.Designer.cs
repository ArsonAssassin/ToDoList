// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.Api.Data;

#nullable disable

namespace ToDoList.Api.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20241216200606_InitialSeedData")]
    partial class InitialSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoList.Api.Models.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TodoItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreationTime = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Local),
                            Description = "Write up the API documentation and usage examples",
                            IsCompleted = false,
                            Title = "Complete project documentation"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CompletionTime = new DateTime(2024, 1, 3, 9, 15, 0, 0, DateTimeKind.Local),
                            CreationTime = new DateTime(2024, 1, 2, 14, 30, 0, 0, DateTimeKind.Local),
                            Description = "Review and merge outstanding PRs in the main repository",
                            IsCompleted = true,
                            Title = "Review pull requests"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreationTime = new DateTime(2024, 1, 3, 11, 0, 0, 0, DateTimeKind.Local),
                            Description = "Configure testing tools and write initial test cases",
                            IsCompleted = false,
                            Title = "Setup test environment"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
